{"remainingRequest":"C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\ng2-smart-table\\lib\\data-set\\row.js","dependencies":[{"path":"C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\ng2-smart-table\\lib\\data-set\\row.js","mtime":1505225756000},{"path":"C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527928412363},{"path":"C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1525376550000}],"contextDependencies":[],"result":["import { Cell } from './cell';\r\nvar Row = /*@__PURE__*/ (function () {\r\n    function Row(index, data, _dataSet) {\r\n        this.index = index;\r\n        this.data = data;\r\n        this._dataSet = _dataSet;\r\n        this.isSelected = false;\r\n        this.isInEditing = false;\r\n        this.cells = [];\r\n        this.process();\r\n    }\r\n    Row.prototype.getCell = function (column) {\r\n        return this.cells.find(function (el) { return el.getColumn() === column; });\r\n    };\r\n    Row.prototype.getCells = function () {\r\n        return this.cells;\r\n    };\r\n    Row.prototype.getData = function () {\r\n        return this.data;\r\n    };\r\n    Row.prototype.getIsSelected = function () {\r\n        return this.isSelected;\r\n    };\r\n    Row.prototype.getNewData = function () {\r\n        var values = Object.assign({}, this.data);\r\n        this.getCells().forEach(function (cell) { return values[cell.getColumn().id] = cell.newValue; });\r\n        return values;\r\n    };\r\n    Row.prototype.setData = function (data) {\r\n        this.data = data;\r\n        this.process();\r\n    };\r\n    Row.prototype.process = function () {\r\n        var _this = this;\r\n        this.cells = [];\r\n        this._dataSet.getColumns().forEach(function (column) {\r\n            var cell = _this.createCell(column);\r\n            _this.cells.push(cell);\r\n        });\r\n    };\r\n    Row.prototype.createCell = function (column) {\r\n        var defValue = column.settings.defaultValue ? column.settings.defaultValue : '';\r\n        var value = typeof this.data[column.id] === 'undefined' ? defValue : this.data[column.id];\r\n        return new Cell(value, this, column, this._dataSet);\r\n    };\r\n    return Row;\r\n}());\r\nexport { Row };\r\n//# sourceMappingURL=row.js.map\r\n",null]}