{"remainingRequest":"C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\@nebular\\theme\\services\\spinner.service.js","dependencies":[{"path":"C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\@nebular\\theme\\services\\spinner.service.js","mtime":499162500000},{"path":"C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527928412363},{"path":"C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1525376550000}],"contextDependencies":[],"result":["import { Injectable, Inject } from '@angular/core';\nimport { NB_DOCUMENT } from '../theme.options';\n/**\n * Service to control the global page spinner.\n */\nvar NbSpinnerService = /*@__PURE__*/ (function () {\n    function NbSpinnerService(document) {\n        this.document = document;\n        this.loaders = [];\n        this.selector = 'nb-global-spinner';\n    }\n    /**\n     * Appends new loader to the list of loader to be completed before\n     * spinner will be hidden\n     * @param method Promise<any>\n     */\n    /**\n       * Appends new loader to the list of loader to be completed before\n       * spinner will be hidden\n       * @param method Promise<any>\n       */\n    NbSpinnerService.prototype.registerLoader = /**\n       * Appends new loader to the list of loader to be completed before\n       * spinner will be hidden\n       * @param method Promise<any>\n       */\n        function (method) {\n            this.loaders.push(method);\n        };\n    /**\n     * Clears the list of loader\n     */\n    /**\n       * Clears the list of loader\n       */\n    NbSpinnerService.prototype.clear = /**\n       * Clears the list of loader\n       */\n        function () {\n            this.loaders = [];\n        };\n    /**\n     * Start the loader process, show spinnder and execute loaders\n     */\n    /**\n       * Start the loader process, show spinnder and execute loaders\n       */\n    NbSpinnerService.prototype.load = /**\n       * Start the loader process, show spinnder and execute loaders\n       */\n        function () {\n            this.showSpinner();\n            this.executeAll();\n        };\n    NbSpinnerService.prototype.executeAll = function (done) {\n        var _this = this;\n        if (done === void 0) {\n            done = function () { };\n        }\n        Promise.all(this.loaders).then(function (values) {\n            _this.hideSpinner();\n            done.call(null, values);\n        })\n            .catch(function (error) {\n            // TODO: Promise.reject\n            console.error(error);\n        });\n    };\n    // TODO is there any better way of doing this?\n    // TODO is there any better way of doing this?\n    NbSpinnerService.prototype.showSpinner =\n        // TODO is there any better way of doing this?\n        function () {\n            var el = this.getSpinnerElement();\n            if (el) {\n                el.style['display'] = 'block';\n            }\n        };\n    NbSpinnerService.prototype.hideSpinner = function () {\n        var el = this.getSpinnerElement();\n        if (el) {\n            el.style['display'] = 'none';\n        }\n    };\n    NbSpinnerService.prototype.getSpinnerElement = function () {\n        return this.document.getElementById(this.selector);\n    };\n    return NbSpinnerService;\n}());\nexport { NbSpinnerService };\n//# sourceMappingURL=spinner.service.js.map\n",null]}