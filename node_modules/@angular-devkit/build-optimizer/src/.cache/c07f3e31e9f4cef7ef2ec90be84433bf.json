{"remainingRequest":"C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\@nebular\\security\\services\\access-checker.service.js","dependencies":[{"path":"C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\@nebular\\security\\services\\access-checker.service.js","mtime":499162500000},{"path":"C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527928412363},{"path":"C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1525376550000}],"contextDependencies":[],"result":["import { Injectable } from '@angular/core';\nimport { NbRoleProvider } from './role.provider';\nimport { NbAclService } from './acl.service';\nimport { map } from 'rxjs/operators';\n/**\n * Access checker service.\n *\n * Injects `NbRoleProvider` to determine current user role, and checks access permissions using `NbAclService`\n */\nvar NbAccessChecker = /*@__PURE__*/ (function () {\n    function NbAccessChecker(roleProvider, acl) {\n        this.roleProvider = roleProvider;\n        this.acl = acl;\n    }\n    /**\n     * Checks whether access is granted or not\n     *\n     * @param {string} permission\n     * @param {string} resource\n     * @returns {Observable<boolean>}\n     */\n    /**\n       * Checks whether access is granted or not\n       *\n       * @param {string} permission\n       * @param {string} resource\n       * @returns {Observable<boolean>}\n       */\n    NbAccessChecker.prototype.isGranted = /**\n       * Checks whether access is granted or not\n       *\n       * @param {string} permission\n       * @param {string} resource\n       * @returns {Observable<boolean>}\n       */\n        function (permission, resource) {\n            var _this = this;\n            return this.roleProvider.getRole()\n                .pipe(map(function (role) {\n                return _this.acl.can(role, permission, resource);\n            }));\n        };\n    return NbAccessChecker;\n}());\nexport { NbAccessChecker };\n//# sourceMappingURL=access-checker.service.js.map\n",null]}