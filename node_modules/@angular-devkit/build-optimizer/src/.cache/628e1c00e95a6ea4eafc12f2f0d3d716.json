{"remainingRequest":"C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\@nebular\\auth\\auth.options.js","dependencies":[{"path":"C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\@nebular\\auth\\auth.options.js","mtime":499162500000},{"path":"C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527928412363},{"path":"C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1525376550000}],"contextDependencies":[],"result":["import { InjectionToken } from '@angular/core';\nvar socialLinks = [];\nexport var defaultSettings = {\n    forms: {\n        login: {\n            redirectDelay: 500,\n            // delay before redirect after a successful login, while success message is shown to the user\n            provider: 'email',\n            // provider id key. If you have multiple providers, or what to use your own\n            rememberMe: true,\n            // whether to show or not the `rememberMe` checkbox\n            showMessages: {\n                // show/not show success/error messages\n                success: true,\n                error: true,\n            },\n            socialLinks: socialLinks,\n        },\n        register: {\n            redirectDelay: 500,\n            provider: 'email',\n            showMessages: {\n                success: true,\n                error: true,\n            },\n            terms: true,\n            socialLinks: socialLinks,\n        },\n        requestPassword: {\n            redirectDelay: 500,\n            provider: 'email',\n            showMessages: {\n                success: true,\n                error: true,\n            },\n            socialLinks: socialLinks,\n        },\n        resetPassword: {\n            redirectDelay: 500,\n            provider: 'email',\n            showMessages: {\n                success: true,\n                error: true,\n            },\n            socialLinks: socialLinks,\n        },\n        logout: {\n            redirectDelay: 500,\n            provider: 'email',\n        },\n        validation: {\n            password: {\n                required: true,\n                minLength: 4,\n                maxLength: 50,\n            },\n            email: {\n                required: true,\n            },\n            fullName: {\n                required: false,\n                minLength: 4,\n                maxLength: 50,\n            },\n        },\n    },\n};\nexport var NB_AUTH_OPTIONS = new InjectionToken('Nebular Auth Options');\nexport var NB_AUTH_USER_OPTIONS = new InjectionToken('Nebular User Auth Options');\nexport var NB_AUTH_PROVIDERS = new InjectionToken('Nebular Auth Providers');\nexport var NB_AUTH_TOKEN_CLASS = new InjectionToken('Nebular Token Class');\nexport var NB_AUTH_INTERCEPTOR_HEADER = new InjectionToken('Nebular Simple Interceptor Header');\n//# sourceMappingURL=auth.options.js.map",null]}