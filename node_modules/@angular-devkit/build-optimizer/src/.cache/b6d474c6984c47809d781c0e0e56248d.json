{"remainingRequest":"C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\@nebular\\theme\\services\\color.helper.js","dependencies":[{"path":"C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\@nebular\\theme\\services\\color.helper.js","mtime":499162500000},{"path":"C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527928412363},{"path":"C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1525376550000}],"contextDependencies":[],"result":["var NbColorHelper = /*@__PURE__*/ (function () {\r\n    function NbColorHelper() {\r\n    }\r\n    NbColorHelper.shade = function (color, weight) {\r\n        return NbColorHelper.mix('#000000', color, weight);\r\n    };\r\n    NbColorHelper.tint = function (color, weight) {\r\n        return NbColorHelper.mix('#ffffff', color, weight);\r\n    };\r\n    NbColorHelper.mix = function (color1, color2, weight) {\r\n        var d2h = function (d) { return d.toString(16); };\r\n        var h2d = function (h) { return parseInt(h, 16); };\r\n        var result = '#';\r\n        for (var i = 1; i < 7; i += 2) {\r\n            var firstPart = h2d(color1.substr(i, 2));\r\n            var secondPart = h2d(color2.substr(i, 2));\r\n            var resultPart = d2h(Math.floor(secondPart + (firstPart - secondPart) * (weight / 100.0)));\r\n            result += ('0' + resultPart).slice(-2);\r\n        }\r\n        return result;\r\n    };\r\n    NbColorHelper.hexToRgbA = function (hex, alpha) {\r\n        var c;\r\n        if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\r\n            c = hex.substring(1).split('');\r\n            if (c.length === 3) {\r\n                c = [c[0], c[0], c[1], c[1], c[2], c[2]];\r\n            }\r\n            c = '0x' + c.join('');\r\n            return 'rgba(' + [(c >> 16) & 255, (c >> 8) & 255, c & 255].join(',') + ',' + alpha + ')';\r\n        }\r\n        throw new Error('Bad Hex');\r\n    };\r\n    return NbColorHelper;\r\n}());\r\nexport { NbColorHelper };\r\n//# sourceMappingURL=color.helper.js.map\r\n",null]}