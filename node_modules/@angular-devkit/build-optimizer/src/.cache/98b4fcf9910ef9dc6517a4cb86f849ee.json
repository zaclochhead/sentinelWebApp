{"remainingRequest":"C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\ng2-completer\\services\\remote-data.js","dependencies":[{"path":"C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\ng2-completer\\services\\remote-data.js","mtime":1504220465000},{"path":"C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527928412363},{"path":"C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1525376550000}],"contextDependencies":[],"result":["import { __extends } from \"tslib\";\r\nimport { EventEmitter } from \"@angular/core\";\r\nimport { Headers, RequestOptions } from \"@angular/http\";\r\nimport \"rxjs/add/operator/map\";\r\nimport \"rxjs/add/operator/catch\";\r\nimport { CompleterBaseData } from \"./completer-base-data\";\r\nvar RemoteData = /*@__PURE__*/ (function (_super) {\r\n    __extends(RemoteData, _super);\r\n    function RemoteData(http) {\r\n        var _this = _super.call(this) || this;\r\n        _this.http = http;\r\n        _this.dataSourceChange = new EventEmitter();\r\n        _this._urlFormater = null;\r\n        _this._dataField = null;\r\n        return _this;\r\n    }\r\n    RemoteData.prototype.remoteUrl = function (remoteUrl) {\r\n        this._remoteUrl = remoteUrl;\r\n        this.dataSourceChange.emit();\r\n        return this;\r\n    };\r\n    RemoteData.prototype.urlFormater = function (urlFormater) {\r\n        this._urlFormater = urlFormater;\r\n    };\r\n    RemoteData.prototype.dataField = function (dataField) {\r\n        this._dataField = dataField;\r\n    };\r\n    /**\r\n     * @deprecated Please use the requestOptions to pass headers with the search request\r\n     */\r\n    RemoteData.prototype.headers = function (headers) {\r\n        this._headers = headers;\r\n    };\r\n    RemoteData.prototype.requestOptions = function (requestOptions) {\r\n        this._requestOptions = requestOptions;\r\n    };\r\n    RemoteData.prototype.search = function (term) {\r\n        var _this = this;\r\n        this.cancel();\r\n        // let params = {};\r\n        var url = \"\";\r\n        if (this._urlFormater) {\r\n            url = this._urlFormater(term);\r\n        }\r\n        else {\r\n            url = this._remoteUrl + encodeURIComponent(term);\r\n        }\r\n        /*\r\n         * If requestOptions are provided, they will override anything set in headers.\r\n         *\r\n         * If no requestOptions are provided, a new RequestOptions object will be instantiated,\r\n         * and either the provided headers or a new Headers() object will be sent.\r\n         */\r\n        if (!this._requestOptions) {\r\n            this._requestOptions = new RequestOptions();\r\n            this._requestOptions.headers = this._headers || new Headers();\r\n        }\r\n        this.remoteSearch = this.http.get(url, this._requestOptions.merge())\r\n            .map(function (res) { return res.json(); })\r\n            .map(function (data) {\r\n            var matches = _this.extractValue(data, _this._dataField);\r\n            return _this.extractMatches(matches, term);\r\n        })\r\n            .catch(function () { return []; })\r\n            .subscribe(function (matches) {\r\n            var results = _this.processResults(matches);\r\n            _this.next(results);\r\n        });\r\n    };\r\n    RemoteData.prototype.cancel = function () {\r\n        if (this.remoteSearch) {\r\n            this.remoteSearch.unsubscribe();\r\n        }\r\n    };\r\n    RemoteData.prototype.convertToItem = function (data) {\r\n        return _super.prototype.convertToItem.call(this, data);\r\n    };\r\n    return RemoteData;\r\n}(CompleterBaseData));\r\nexport { RemoteData };\r\n//# sourceMappingURL=remote-data.js.map\r\n",null]}