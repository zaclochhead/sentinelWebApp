{"remainingRequest":"C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\ng2-smart-table\\components\\filter\\filter.component.js","dependencies":[{"path":"C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\ng2-smart-table\\components\\filter\\filter.component.js","mtime":1505225756000},{"path":"C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527928412363},{"path":"C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1525376550000}],"contextDependencies":[],"result":["import { __decorate } from \"tslib\";\nimport { __metadata } from \"tslib\";\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { DataSource } from '../../lib/data-source/data-source';\nimport { Column } from '../../lib/data-set/column';\nvar FilterComponent = /*@__PURE__*/ (function () {\n    function FilterComponent() {\n        this.inputClass = '';\n        this.filter = new EventEmitter();\n        this.query = '';\n    }\n    FilterComponent.prototype.ngOnChanges = function (changes) {\n        var _this = this;\n        if (changes.source) {\n            if (!changes.source.firstChange) {\n                this.dataChangedSub.unsubscribe();\n            }\n            this.dataChangedSub = this.source.onChanged().subscribe(function (dataChanges) {\n                var filterConf = _this.source.getFilter();\n                if (filterConf && filterConf.filters && filterConf.filters.length === 0) {\n                    _this.query = '';\n                    // add a check for existing filters an set the query if one exists for this column\n                    // this covers instances where the filter is set by user code while maintaining existing functionality\n                }\n                else if (filterConf && filterConf.filters && filterConf.filters.length > 0) {\n                    filterConf.filters.forEach(function (k, v) {\n                        if (k.field == _this.column.id) {\n                            _this.query = k.search;\n                        }\n                    });\n                }\n            });\n        }\n    };\n    FilterComponent.prototype.onFilter = function (query) {\n        this.source.addFilter({\n            field: this.column.id,\n            search: query,\n            filter: this.column.getFilterFunction(),\n        });\n    };\n    return FilterComponent;\n}());\nexport { FilterComponent };\n//# sourceMappingURL=filter.component.js.map\n",null]}