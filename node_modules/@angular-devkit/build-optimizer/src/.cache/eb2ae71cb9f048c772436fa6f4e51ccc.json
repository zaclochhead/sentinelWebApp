{"remainingRequest":"C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\@nebular\\theme\\services\\breakpoints.service.js","dependencies":[{"path":"C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\@nebular\\theme\\services\\breakpoints.service.js","mtime":499162500000},{"path":"C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527928412363},{"path":"C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1525376550000}],"contextDependencies":[],"result":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { Inject, Injectable } from '@angular/core';\nimport { nbMediaBreakpointsToken } from '../theme.options';\nexport var DEFAULT_MEDIA_BREAKPOINTS = [\n    {\n        name: 'xs',\n        width: 0,\n    },\n    {\n        name: 'is',\n        width: 400,\n    },\n    {\n        name: 'sm',\n        width: 576,\n    },\n    {\n        name: 'md',\n        width: 768,\n    },\n    {\n        name: 'lg',\n        width: 992,\n    },\n    {\n        name: 'xl',\n        width: 1200,\n    },\n    {\n        name: 'xxl',\n        width: 1400,\n    },\n    {\n        name: 'xxxl',\n        width: 1600,\n    },\n];\n/**\n * Manages media breakpoints\n *\n * Provides access to available media breakpoints to convert window width to a configured breakpoint,\n * e.g. 200px - *xs* breakpoint\n */\nvar NbMediaBreakpointsService = /*@__PURE__*/ (function () {\n    function NbMediaBreakpointsService(breakpoints) {\n        this.breakpoints = breakpoints;\n        this.breakpointsMap = this.breakpoints.reduce(function (res, b) {\n            res[b.name] = b.width;\n            return res;\n        }, {});\n    }\n    /**\n     * Returns a configured breakpoint by width\n     * @param width number\n     * @returns {Z|{name: string, width: number}}\n     */\n    /**\n       * Returns a configured breakpoint by width\n       * @param width number\n       * @returns {Z|{name: string, width: number}}\n       */\n    NbMediaBreakpointsService.prototype.getByWidth = /**\n       * Returns a configured breakpoint by width\n       * @param width number\n       * @returns {Z|{name: string, width: number}}\n       */\n        function (width) {\n            var unknown = { name: 'unknown', width: width };\n            var breakpoints = this.getBreakpoints();\n            return breakpoints\n                .find(function (point, index) {\n                var next = breakpoints[index + 1];\n                return width >= point.width && (!next || width < next.width);\n            }) || unknown;\n        };\n    /**\n     * Returns a configured breakpoint by name\n     * @param name string\n     * @returns NbMediaBreakpoint\n     */\n    /**\n       * Returns a configured breakpoint by name\n       * @param name string\n       * @returns NbMediaBreakpoint\n       */\n    NbMediaBreakpointsService.prototype.getByName = /**\n       * Returns a configured breakpoint by name\n       * @param name string\n       * @returns NbMediaBreakpoint\n       */\n        function (name) {\n            var unknown = { name: 'unknown', width: NaN };\n            var breakpoints = this.getBreakpoints();\n            return breakpoints.find(function (point) { return name === point.name; }) || unknown;\n        };\n    /**\n     * Returns a list of configured breakpoints for the theme\n     * @returns NbMediaBreakpoint[]\n     */\n    /**\n       * Returns a list of configured breakpoints for the theme\n       * @returns NbMediaBreakpoint[]\n       */\n    NbMediaBreakpointsService.prototype.getBreakpoints = /**\n       * Returns a list of configured breakpoints for the theme\n       * @returns NbMediaBreakpoint[]\n       */\n        function () {\n            return this.breakpoints;\n        };\n    /**\n     * Returns a map of configured breakpoints for the theme\n     * @returns {[p: string]: number}\n     */\n    /**\n       * Returns a map of configured breakpoints for the theme\n       * @returns {[p: string]: number}\n       */\n    NbMediaBreakpointsService.prototype.getBreakpointsMap = /**\n       * Returns a map of configured breakpoints for the theme\n       * @returns {[p: string]: number}\n       */\n        function () {\n            return this.breakpointsMap;\n        };\n    return NbMediaBreakpointsService;\n}());\nexport { NbMediaBreakpointsService };\n//# sourceMappingURL=breakpoints.service.js.map\n",null]}