{"remainingRequest":"C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\ng2-tree\\src\\tree-controller.js","dependencies":[{"path":"C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\ng2-tree\\src\\tree-controller.js","mtime":1511605106000},{"path":"C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527928412363},{"path":"C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1525376550000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar menu_events_1 = require(\"./menu/menu.events\");\r\nvar event_utils_1 = require(\"./utils/event.utils\");\r\nvar TreeController = /*@__PURE__*/ (function () {\r\n    function TreeController(component) {\r\n        this.component = component;\r\n        this.tree = this.component.tree;\r\n        this.treeService = this.component.treeService;\r\n    }\r\n    TreeController.prototype.select = function () {\r\n        if (!this.isSelected()) {\r\n            this.component.onNodeSelected({ button: event_utils_1.MouseButtons.Left });\r\n        }\r\n    };\r\n    TreeController.prototype.isSelected = function () {\r\n        return this.component.isSelected;\r\n    };\r\n    TreeController.prototype.expand = function () {\r\n        if (this.isCollapsed()) {\r\n            this.component.onSwitchFoldingType();\r\n        }\r\n    };\r\n    TreeController.prototype.isExpanded = function () {\r\n        return this.tree.isNodeExpanded();\r\n    };\r\n    TreeController.prototype.collapse = function () {\r\n        if (this.isExpanded()) {\r\n            this.component.onSwitchFoldingType();\r\n        }\r\n    };\r\n    TreeController.prototype.isCollapsed = function () {\r\n        return this.tree.isNodeCollapsed();\r\n    };\r\n    TreeController.prototype.toTreeModel = function () {\r\n        return this.tree.toTreeModel();\r\n    };\r\n    TreeController.prototype.rename = function (newValue) {\r\n        this.tree.markAsBeingRenamed();\r\n        this.component.applyNewValue({ type: 'keyup', value: newValue });\r\n    };\r\n    TreeController.prototype.remove = function () {\r\n        this.component.onMenuItemSelected({ nodeMenuItemAction: menu_events_1.NodeMenuItemAction.Remove });\r\n    };\r\n    TreeController.prototype.addChild = function (newNode) {\r\n        if (this.tree.hasDeferredChildren() && !this.tree.childrenWereLoaded()) {\r\n            return;\r\n        }\r\n        var newTree = this.tree.createNode(Array.isArray(newNode.children), newNode);\r\n        this.treeService.fireNodeCreated(newTree);\r\n    };\r\n    TreeController.prototype.changeNodeId = function (id) {\r\n        if (!id) {\r\n            throw Error('You should supply an id!');\r\n        }\r\n        if (this.treeService.hasController(id)) {\r\n            throw Error(\"Controller already exists for the given id: \" + id);\r\n        }\r\n        this.treeService.deleteController(this.tree.id);\r\n        this.tree.id = id;\r\n        this.treeService.setController(this.tree.id, this);\r\n    };\r\n    TreeController.prototype.reloadChildren = function () {\r\n        this.tree.reloadChildren();\r\n    };\r\n    TreeController.prototype.setChildren = function (children) {\r\n        if (!this.tree.isLeaf()) {\r\n            this.tree.setChildren(children);\r\n        }\r\n    };\r\n    TreeController.prototype.startRenaming = function () {\r\n        this.tree.markAsBeingRenamed();\r\n    };\r\n    return TreeController;\r\n}());\r\nexports.TreeController = TreeController;\r\n",null]}