{"remainingRequest":"C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\@nebular\\theme\\components\\sidebar\\sidebar.component.js","dependencies":[{"path":"C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\@nebular\\theme\\components\\sidebar\\sidebar.component.js","mtime":499162500000},{"path":"C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527928412363},{"path":"C:\\Users\\Zac\\Desktop\\2018courses\\sentinel\\Sentinel\\WebApplication\\FrontEnd\\ngx-admin-master\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1525376550000}],"contextDependencies":[],"result":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { Component, HostBinding, Input, ElementRef } from '@angular/core';\nimport { takeWhile } from 'rxjs/operators';\nimport { convertToBoolProperty } from '../helpers';\nimport { NbThemeService } from '../../services/theme.service';\nimport { NbSidebarService } from './sidebar.service';\n/**\n * Sidebar header container.\n *\n * Placeholder which contains a sidebar header content,\n * placed at the very top of the sidebar outside of the scroll area.\n */\nvar NbSidebarHeaderComponent = /*@__PURE__*/ (function () {\n    function NbSidebarHeaderComponent() {\n    }\n    return NbSidebarHeaderComponent;\n}());\nexport { NbSidebarHeaderComponent };\n/**\n * Sidebar footer container.\n *\n * Placeholder which contains a sidebar footer content,\n * placed at the very bottom of the sidebar outside of the scroll area.\n */\nvar NbSidebarFooterComponent = /*@__PURE__*/ (function () {\n    function NbSidebarFooterComponent() {\n    }\n    return NbSidebarFooterComponent;\n}());\nexport { NbSidebarFooterComponent };\n/**\n * Layout sidebar component.\n *\n * Sidebar can be placed on the left or the right side of the layout,\n * or on start or end position of layout (depends on document direction, left to right or right to left)\n * It can be fixed (shown above the content) or can push the layout when opened.\n *\n * There are three states - `expanded`, `collapsed`, `compacted`.\n * By default sidebar content is fixed and saves its position while the page is being scrolled.\n *\n * Sidebar also supports a `responsive` behavior, listening to window size change and changing its size respectably.\n *\n * @example Minimal sidebar example\n *\n * ```\n * <nb-sidebar>\n *   Sidebar content.\n * </nb-sidebar>\n * ```\n *\n * @example Example of fixed sidebar located on the left side, initially collapsed.\n *\n * ```\n * <nb-sidebar left fixed state=\"collapsed\">\n *  <nb-sidebar-header>Header</nb-sidebar-header>\n *\n *    Sidebar content, menu or another component here.\n *\n *  <nb-sidebar-footer>\n *    Footer components here\n *  </nb-sidebar-footer>\n * </nb-sidebar>\n * ```\n *\n * @styles\n *\n * sidebar-font-size: Sidebar content font size\n * sidebar-line-height: Sidebar content line height\n * sidebar-fg: Foreground color\n * sidebar-bg: Background color\n * sidebar-height: Content height\n * sidebar-width: Expanded width\n * sidebar-width-compact: Compacted width\n * sidebar-padding: Sidebar content padding\n * sidebar-header-height: Sidebar header height\n * sidebar-footer-height: Sidebar footer height\n * sidebar-shadow: Sidebar container shadow\n *\n */\nvar NbSidebarComponent = /*@__PURE__*/ (function () {\n    function NbSidebarComponent(sidebarService, themeService, element) {\n        this.sidebarService = sidebarService;\n        this.themeService = themeService;\n        this.element = element;\n        this.responsiveValue = false;\n        this.alive = true;\n        this.fixedValue = false;\n        this.rightValue = false;\n        this.leftValue = true;\n        this.startValue = false;\n        this.endValue = false;\n        this.responsiveState = NbSidebarComponent.RESPONSIVE_STATE_PC;\n    }\n    Object.defineProperty(NbSidebarComponent.prototype, \"expanded\", {\n        get: \n        // TODO: rename stateValue to state (take a look to the card component)\n        function () {\n            return this.stateValue === NbSidebarComponent.STATE_EXPANDED;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbSidebarComponent.prototype, \"collapsed\", {\n        get: function () {\n            return this.stateValue === NbSidebarComponent.STATE_COLLAPSED;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbSidebarComponent.prototype, \"compacted\", {\n        get: function () {\n            return this.stateValue === NbSidebarComponent.STATE_COMPACTED;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbSidebarComponent.prototype, \"right\", {\n        set: /**\n           * Places sidebar on the right side\n           * @type {boolean}\n           */ function (val) {\n            this.rightValue = convertToBoolProperty(val);\n            this.leftValue = !this.rightValue;\n            this.startValue = false;\n            this.endValue = false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbSidebarComponent.prototype, \"left\", {\n        set: /**\n           * Places sidebar on the left side\n           * @type {boolean}\n           */ function (val) {\n            this.leftValue = convertToBoolProperty(val);\n            this.rightValue = !this.leftValue;\n            this.startValue = false;\n            this.endValue = false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbSidebarComponent.prototype, \"start\", {\n        set: /**\n           * Places sidebar on the start edge of layout\n           * @type {boolean}\n           */ function (val) {\n            this.startValue = convertToBoolProperty(val);\n            this.endValue = !this.startValue;\n            this.leftValue = false;\n            this.rightValue = false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbSidebarComponent.prototype, \"end\", {\n        set: /**\n           * Places sidebar on the end edge of layout\n           * @type {boolean}\n           */ function (val) {\n            this.endValue = convertToBoolProperty(val);\n            this.startValue = !this.endValue;\n            this.leftValue = false;\n            this.rightValue = false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbSidebarComponent.prototype, \"fixed\", {\n        set: /**\n           * Makes sidebar fixed (shown above the layout content)\n           * @type {boolean}\n           */ function (val) {\n            this.fixedValue = convertToBoolProperty(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbSidebarComponent.prototype, \"state\", {\n        set: /**\n           * Initial sidebar state, `expanded`|`collapsed`|`compacted`\n           * @type {string}\n           */ function (val) {\n            this.stateValue = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbSidebarComponent.prototype, \"responsive\", {\n        set: /**\n           * Makes sidebar listen to media query events and change its behaviour\n           * @type {boolean}\n           */ function (val) {\n            this.responsiveValue = convertToBoolProperty(val);\n            this.toggleResponsive(this.responsiveValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NbSidebarComponent.prototype.toggleResponsive = function (enabled) {\n        if (enabled) {\n            this.mediaQuerySubscription = this.onMediaQueryChanges();\n        }\n        else if (this.mediaQuerySubscription) {\n            this.mediaQuerySubscription.unsubscribe();\n        }\n    };\n    NbSidebarComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.sidebarService.onToggle()\n            .pipe(takeWhile(function () { return _this.alive; }))\n            .subscribe(function (data) {\n            if (!_this.tag || _this.tag === data.tag) {\n                _this.toggle(data.compact);\n            }\n        });\n        this.sidebarService.onExpand()\n            .pipe(takeWhile(function () { return _this.alive; }))\n            .subscribe(function (data) {\n            if (!_this.tag || _this.tag === data.tag) {\n                _this.expand();\n            }\n        });\n        this.sidebarService.onCollapse()\n            .pipe(takeWhile(function () { return _this.alive; }))\n            .subscribe(function (data) {\n            if (!_this.tag || _this.tag === data.tag) {\n                _this.collapse();\n            }\n        });\n    };\n    NbSidebarComponent.prototype.ngOnDestroy = function () {\n        this.alive = false;\n        if (this.mediaQuerySubscription) {\n            this.mediaQuerySubscription.unsubscribe();\n        }\n    };\n    // TODO: this is more of a workaround, should be a better way to make components communicate to each other\n    // TODO: this is more of a workaround, should be a better way to make components communicate to each other\n    NbSidebarComponent.prototype.onClick =\n        // TODO: this is more of a workaround, should be a better way to make components communicate to each other\n        function (event) {\n            var menu = this.element.nativeElement.querySelector('nb-menu');\n            if (menu && menu.contains(event.target)) {\n                var link = event.target;\n                var linkChildren = ['span', 'i'];\n                // if we clicked on span - get the link\n                if (linkChildren.indexOf(link.tagName.toLowerCase()) !== -1 && link.parentNode) {\n                    link = event.target.parentNode;\n                }\n                // we only expand if an item has children\n                if (link && link.nextElementSibling && link.nextElementSibling.classList.contains('menu-items')) {\n                    this.expand();\n                }\n            }\n        };\n    /**\n     * Collapses the sidebar\n     */\n    /**\n       * Collapses the sidebar\n       */\n    NbSidebarComponent.prototype.collapse = /**\n       * Collapses the sidebar\n       */\n        function () {\n            this.state = NbSidebarComponent.STATE_COLLAPSED;\n        };\n    /**\n     * Expands the sidebar\n     */\n    /**\n       * Expands the sidebar\n       */\n    NbSidebarComponent.prototype.expand = /**\n       * Expands the sidebar\n       */\n        function () {\n            this.state = NbSidebarComponent.STATE_EXPANDED;\n        };\n    /**\n     * Compacts the sidebar (minimizes)\n     */\n    /**\n       * Compacts the sidebar (minimizes)\n       */\n    NbSidebarComponent.prototype.compact = /**\n       * Compacts the sidebar (minimizes)\n       */\n        function () {\n            this.state = NbSidebarComponent.STATE_COMPACTED;\n        };\n    /**\n     * Toggles sidebar state (expanded|collapsed|compacted)\n     * @param {boolean} compact If true, then sidebar state will be changed between expanded & compacted,\n     * otherwise - between expanded & collapsed. False by default.\n     *\n     * @example Toggle sidebar state\n     *\n     * ```\n     * this.sidebar.toggle(true);\n     * ```\n     */\n    /**\n       * Toggles sidebar state (expanded|collapsed|compacted)\n       * @param {boolean} compact If true, then sidebar state will be changed between expanded & compacted,\n       * otherwise - between expanded & collapsed. False by default.\n       *\n       * @example Toggle sidebar state\n       *\n       * ```\n       * this.sidebar.toggle(true);\n       * ```\n       */\n    NbSidebarComponent.prototype.toggle = /**\n       * Toggles sidebar state (expanded|collapsed|compacted)\n       * @param {boolean} compact If true, then sidebar state will be changed between expanded & compacted,\n       * otherwise - between expanded & collapsed. False by default.\n       *\n       * @example Toggle sidebar state\n       *\n       * ```\n       * this.sidebar.toggle(true);\n       * ```\n       */\n        function (compact) {\n            if (compact === void 0) {\n                compact = false;\n            }\n            if (this.responsiveEnabled()) {\n                if (this.responsiveState === NbSidebarComponent.RESPONSIVE_STATE_MOBILE) {\n                    compact = false;\n                }\n            }\n            var closedStates = [NbSidebarComponent.STATE_COMPACTED, NbSidebarComponent.STATE_COLLAPSED];\n            if (compact) {\n                this.state = closedStates.indexOf(this.stateValue) >= 0 ?\n                    NbSidebarComponent.STATE_EXPANDED : NbSidebarComponent.STATE_COMPACTED;\n            }\n            else {\n                this.state = closedStates.indexOf(this.stateValue) >= 0 ?\n                    NbSidebarComponent.STATE_EXPANDED : NbSidebarComponent.STATE_COLLAPSED;\n            }\n        };\n    NbSidebarComponent.prototype.onMediaQueryChanges = function () {\n        var _this = this;\n        return this.themeService.onMediaQueryChange()\n            .subscribe(function (_a) {\n            var prev = _a[0], current = _a[1];\n            // TODO: get width by the key and define only max width for the tablets and mobiles\n            var tablet = ['xs', 'is', 'sm', 'md', 'lg'];\n            var mobile = ['xs', 'is'];\n            if (tablet.indexOf(current.name) !== -1) {\n                _this.fixed = true;\n                _this.compact();\n                _this.responsiveState = NbSidebarComponent.RESPONSIVE_STATE_TABLET;\n            }\n            if (mobile.indexOf(current.name) !== -1) {\n                _this.collapse();\n                _this.responsiveState = NbSidebarComponent.RESPONSIVE_STATE_MOBILE;\n            }\n            if (tablet.indexOf(current.name) === -1 && prev.width < current.width) {\n                _this.expand();\n                _this.fixed = false;\n                _this.responsiveState = NbSidebarComponent.RESPONSIVE_STATE_PC;\n            }\n        });\n    };\n    NbSidebarComponent.prototype.responsiveEnabled = function () {\n        return this.responsiveValue;\n    };\n    NbSidebarComponent.STATE_EXPANDED = 'expanded';\n    NbSidebarComponent.STATE_COLLAPSED = 'collapsed';\n    NbSidebarComponent.STATE_COMPACTED = 'compacted';\n    NbSidebarComponent.RESPONSIVE_STATE_MOBILE = 'mobile';\n    NbSidebarComponent.RESPONSIVE_STATE_TABLET = 'tablet';\n    NbSidebarComponent.RESPONSIVE_STATE_PC = 'pc';\n    return NbSidebarComponent;\n}());\nexport { NbSidebarComponent };\n//# sourceMappingURL=sidebar.component.js.map\n",null]}