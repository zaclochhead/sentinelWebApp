import { ElementRef, OnChanges, OnDestroy, OnInit, SimpleChanges, TemplateRef } from '@angular/core';
import * as TreeTypes from './tree.types';
import { Tree } from './tree';
import { TreeController } from './tree-controller';
import { NodeMenuService } from './menu/node-menu.service';
import { NodeMenuItemSelectedEvent } from './menu/menu.events';
import { NodeEditableEvent } from './editable/editable.events';
import { TreeService } from './tree.service';
export declare class TreeInternalComponent implements OnInit, OnChanges, OnDestroy {
    private nodeMenuService;
    treeService: TreeService;
    element: ElementRef;
    tree: Tree;
    settings: TreeTypes.Ng2TreeSettings;
    template: TemplateRef<any>;
    isSelected: boolean;
    isRightMenuVisible: boolean;
    isLeftMenuVisible: boolean;
    controller: TreeController;
    private subscriptions;
    constructor(nodeMenuService: NodeMenuService, treeService: TreeService, element: ElementRef);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    private swapWithSibling(sibling, tree);
    private moveNodeToThisTreeAndRemoveFromPreviousOne(e, tree);
    private moveNodeToParentTreeAndRemoveFromPreviousOne(e, tree);
    onNodeSelected(e: {
        button: number;
    }): void;
    showRightMenu(e: MouseEvent): void;
    showLeftMenu(e: MouseEvent): void;
    onMenuItemSelected(e: NodeMenuItemSelectedEvent): void;
    private onNewSelected(e);
    private onRenameSelected();
    private onRemoveSelected();
    onSwitchFoldingType(): void;
    applyNewValue(e: NodeEditableEvent): void;
    shouldShowInputForTreeValue(): boolean;
    isRootHidden(): boolean;
    hasCustomMenu(): boolean;
}
